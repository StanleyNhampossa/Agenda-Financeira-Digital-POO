package view.declaracaoderendimentos;

import Dao.RendimentoDao;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Rendimento;
import view.Main;
import view.geral.Notificacao;
import view.menu.MenuView;

/**
 *
 * @author Grácio Macuácua
 */
public class PainelDeclaracaoRendimentos extends javax.swing.JPanel {

    /**
     * Creates new form PainelDeclaracaoRendimentos
     */
    public PainelDeclaracaoRendimentos() {
        initComponents();
        preencherTabela();
        inserirValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        spRendimentos = new javax.swing.JSpinner();
        cbTipoRendimento = new javax.swing.JComboBox<>();
        txtPesquisaRendimento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFonte = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblRendimentoFixo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblRendimentoVariavel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblRendimentoTotal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaRendimento = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnSalvarRendimento = new javax.swing.JButton();
        btnActualizarRendimento = new javax.swing.JButton();
        btnExcluirRendimento = new javax.swing.JButton();

        setForeground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(950, 594));
        setMinimumSize(new java.awt.Dimension(950, 594));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(950, 594));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Declaracao de rendimento"));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Rendimento");

        spRendimentos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spRendimentos.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spRendimentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                spRendimentosKeyPressed(evt);
            }
        });

        cbTipoRendimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTipoRendimento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Fixo", "Variavel" }));
        cbTipoRendimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbTipoRendimentoKeyPressed(evt);
            }
        });

        txtPesquisaRendimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPesquisaRendimento.setForeground(new java.awt.Color(153, 153, 153));
        txtPesquisaRendimento.setText("Pesquisar fonte de rendimento");
        txtPesquisaRendimento.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        txtPesquisaRendimento.setMaximumSize(new java.awt.Dimension(200, 22));
        txtPesquisaRendimento.setMinimumSize(new java.awt.Dimension(200, 22));
        txtPesquisaRendimento.setPreferredSize(new java.awt.Dimension(200, 22));
        txtPesquisaRendimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisaRendimentoFocusLost(evt);
            }
        });
        txtPesquisaRendimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPesquisaRendimentoMouseClicked(evt);
            }
        });
        txtPesquisaRendimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaRendimentoKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Fonte de Rendimento:");

        txtFonte.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFonte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFonteKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Tipo");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Rendimento Fixo");

        lblRendimentoFixo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRendimentoFixo.setForeground(new java.awt.Color(102, 102, 102));
        lblRendimentoFixo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRendimentoFixo.setText("0");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Rendimento Variavel");

        lblRendimentoVariavel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRendimentoVariavel.setForeground(new java.awt.Color(102, 102, 102));
        lblRendimentoVariavel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRendimentoVariavel.setText("0");
        lblRendimentoVariavel.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Total");

        lblRendimentoTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRendimentoTotal.setForeground(new java.awt.Color(102, 102, 102));
        lblRendimentoTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRendimentoTotal.setText("0");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8_search_15px.png"))); // NOI18N
        jLabel8.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        jLabel8.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(133, 133, 133)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRendimentoFixo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRendimentoVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRendimentoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbTipoRendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(spRendimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPesquisaRendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFonte))
                    .addComponent(cbTipoRendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spRendimentos))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPesquisaRendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblRendimentoVariavel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblRendimentoFixo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRendimentoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        tabelaRendimento.getTableHeader().setBackground(Color.WHITE);
        tabelaRendimento.getTableHeader().setForeground(new Color(104,104,104));
        tabelaRendimento.setRowHeight(30);
        //tabelaRendimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabelaRendimento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Rendimento", "Fonte"
            }
        ));
        tabelaRendimento.setRowHeight(30);
        tabelaRendimento.setShowGrid(false);
        tabelaRendimento.setShowVerticalLines(false);
        tabelaRendimento.getTableHeader().setBackground(Color.WHITE);
        tabelaRendimento.getTableHeader().setForeground(new Color(154, 154, 154));
        tabelaRendimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaRendimentoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaRendimento);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridLayout(1, 3, 100, 0));

        btnSalvarRendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar-botao.png"))); // NOI18N
        btnSalvarRendimento.setContentAreaFilled(false);
        btnSalvarRendimento.setMaximumSize(new java.awt.Dimension(30, 40));
        btnSalvarRendimento.setPreferredSize(new java.awt.Dimension(30, 40));
        btnSalvarRendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarRendimentoActionPerformed(evt);
            }
        });
        jPanel3.add(btnSalvarRendimento);

        btnActualizarRendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/atualizar-pares-de-setas-em-circulo.png"))); // NOI18N
        btnActualizarRendimento.setContentAreaFilled(false);
        btnActualizarRendimento.setMaximumSize(new java.awt.Dimension(30, 40));
        btnActualizarRendimento.setPreferredSize(new java.awt.Dimension(30, 40));
        btnActualizarRendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarRendimentoActionPerformed(evt);
            }
        });
        jPanel3.add(btnActualizarRendimento);

        btnExcluirRendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/excluir.png"))); // NOI18N
        btnExcluirRendimento.setContentAreaFilled(false);
        btnExcluirRendimento.setMaximumSize(new java.awt.Dimension(30, 40));
        btnExcluirRendimento.setPreferredSize(new java.awt.Dimension(30, 40));
        btnExcluirRendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirRendimentoActionPerformed(evt);
            }
        });
        jPanel3.add(btnExcluirRendimento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarRendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarRendimentoActionPerformed
        adicionar();
    }//GEN-LAST:event_btnSalvarRendimentoActionPerformed

    private void btnExcluirRendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirRendimentoActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirRendimentoActionPerformed

    private void btnActualizarRendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarRendimentoActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarRendimentoActionPerformed

    private void txtPesquisaRendimentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaRendimentoKeyReleased
        pesquisar();
    }//GEN-LAST:event_txtPesquisaRendimentoKeyReleased

    private void txtPesquisaRendimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaRendimentoFocusLost
        if(txtPesquisaRendimento.getText().isBlank()) {
            txtPesquisaRendimento.setText("Pesquisar fonte de rendimento");  
            limparCampos();
        }
    }//GEN-LAST:event_txtPesquisaRendimentoFocusLost

    private void cbTipoRendimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbTipoRendimentoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            spRendimentos.requestFocus();
    }//GEN-LAST:event_cbTipoRendimentoKeyPressed

    private void spRendimentosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spRendimentosKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            txtFonte.requestFocus();
            
    }//GEN-LAST:event_spRendimentosKeyPressed
  
    private void txtFonteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFonteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            btnSalvarRendimento.requestFocus(); 
    }//GEN-LAST:event_txtFonteKeyPressed

    private void tabelaRendimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaRendimentoMouseClicked
        if(tabelaRendimento.getSelectedRow() != -1) {
            cbTipoRendimento.setSelectedItem(tabelaRendimento.getValueAt(tabelaRendimento.getSelectedRow(), 1));
            spRendimentos.setValue(tabelaRendimento.getValueAt(tabelaRendimento.getSelectedRow(), 2));
            txtFonte.setText(tabelaRendimento.getValueAt(tabelaRendimento.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_tabelaRendimentoMouseClicked

    private void txtPesquisaRendimentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquisaRendimentoMouseClicked
        if(txtPesquisaRendimento.getText().equalsIgnoreCase("Pesquisar Fonte de Rendimento"))
            txtPesquisaRendimento.setText("");
        else if(evt.getClickCount() == 2) {
            txtPesquisaRendimento.setText("");
            preencherTabela();
        }            
    }//GEN-LAST:event_txtPesquisaRendimentoMouseClicked
   
    private void pesquisar() {
        DefaultTableModel model = (DefaultTableModel) tabelaRendimento.getModel();
        model.setNumRows(0);
        RendimentoDao.listar(MenuView.user.getId(), txtPesquisaRendimento.getText()).forEach((p) -> {
            model.addRow(new Object[]{p.getId(), p.getTipoRendimento(), p.getRendimento(),p.getFonteRendimento()});
        });
        
        if(txtPesquisaRendimento.getText().isBlank()) 
            limparCampos();        
    }
    
    private void inserirValores(){
        Double fixoRendimento = 0.0;
        Double variavelRendimento = 0.0;
        Double somaRendimento = 0.0;
        
        for(int i = 0; i < tabelaRendimento.getRowCount(); i++ ) {
            if(tabelaRendimento.getValueAt(i, 1).toString().equalsIgnoreCase("Fixo"))
                fixoRendimento += Double.parseDouble(tabelaRendimento.getValueAt(i, 2).toString());
            else
                variavelRendimento += Double.parseDouble(tabelaRendimento.getValueAt(i, 2).toString());;
        }
        somaRendimento = variavelRendimento + fixoRendimento;
        lblRendimentoFixo.setText(fixoRendimento.toString());
        lblRendimentoVariavel.setText(variavelRendimento.toString());
        lblRendimentoTotal.setText(somaRendimento.toString());
    }  
  
    
    private void preencherTabela() {
        List<Rendimento> lista;
        if(txtPesquisaRendimento.getText().equalsIgnoreCase("Pesquisar fonte de rendimento"))
            lista = RendimentoDao.listar(MenuView.user.getId(), "");
        else
            lista = RendimentoDao.listar(MenuView.user.getId(), txtPesquisaRendimento.getText());
        DefaultTableModel modeloTabela = (DefaultTableModel) tabelaRendimento.getModel();
        modeloTabela.setRowCount(0);
        lista.forEach((p) -> {
            modeloTabela.addRow(new Object[]{p.getId(), p.getTipoRendimento(), p.getRendimento(), p.getFonteRendimento()});
        });
        
    }             
    
    private void excluir() {
        int opcao = tabelaRendimento.getSelectedRow();
        if (opcao >= 0) {
            Rendimento p = new Rendimento();
            p.setId(Integer.parseInt(tabelaRendimento.getValueAt(opcao, 0).toString()));
            p.setTipoRendimento(tabelaRendimento.getValueAt(opcao, 1).toString());
            p.setRendimento(Double.parseDouble(tabelaRendimento.getValueAt(opcao, 2).toString()));           
            p.setFonteRendimento(tabelaRendimento.getValueAt(opcao, 3).toString());
            int res = Notificacao.mostrarDialogoDeOpcaoDupla(Main.main, "Deseja excluir o rendimento?", Notificacao.ICONE_QUESTAO);
            if(res == Notificacao.BOTAO_SIM)
                if(RendimentoDao.excluir(p)) {
                    preencherTabela();
                    Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Rendimento excluído com sucesso!!", Notificacao.ICONE_SUCESSO);                    
                    limparCampos();
                    inserirValores();
                }else
                    Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "A exclusão falhou!\nOcorreu um erro ao excluir o rendimento.", Notificacao.ICONE_ERRO);
        } else {
            Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Selecione o rendimento que deseja excluir!", Notificacao.ICONE_INFORMACAO);
        }
    }
    
    private void actualizar() {
        if(tabelaRendimento.getSelectedRow() != -1) {
            if(Double.parseDouble(spRendimentos.getValue().toString()) != 0.0 && 
                (!txtFonte.getText().isBlank() && !cbTipoRendimento.getSelectedItem().equals(""))) {
                Rendimento p = new Rendimento();
                p.setId(Integer.parseInt(tabelaRendimento.getValueAt(tabelaRendimento.getSelectedRow(), 0).toString()));
                p.setTipoRendimento((String) cbTipoRendimento.getSelectedItem());
                p.setRendimento(Double.parseDouble(spRendimentos.getValue().toString()));
                p.setFonteRendimento(txtFonte.getText());
                if(RendimentoDao.actualizar(p)) {
                    Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Actualização efectuada com sucesso!", Notificacao.ICONE_SUCESSO);
                    limparCampos();
                    preencherTabela();
                    limparCampos();
                    inserirValores();
                }else
                    Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "A actualização falhou!\nOcorreu um erro ao actualizar o rendimento.", Notificacao.ICONE_ERRO);
            }else
                Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Preencha todos os campos para prosseguir!", Notificacao.ICONE_INFORMACAO);        
        } else
            Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Selecione uma linha para actualizar!", Notificacao.ICONE_INFORMACAO);
    }
    
    private void adicionar() {
        if(Double.parseDouble(spRendimentos.getValue().toString()) != 0.0 && 
          (!txtFonte.getText().isBlank() && !cbTipoRendimento.getSelectedItem().equals(""))) {
            Rendimento p = new Rendimento();
            p.setTipoRendimento((String) cbTipoRendimento.getSelectedItem());
            p.setRendimento(Double.parseDouble(spRendimentos.getValue().toString()));
            p.setUtilizador_id(MenuView.user.getId());
            p.setFonteRendimento(txtFonte.getText());
            if(RendimentoDao.cadastrar(p)) {
                limparCampos();
                Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Rendimento adicionado com sucesso!", Notificacao.ICONE_SUCESSO);
                preencherTabela();
                inserirValores();
            }else
                Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "A operação falhou!\nOcorreu um erro ao adicionar o rendimento.", Notificacao.ICONE_ERRO);
        } else 
            Notificacao.mostrarDialogoDeOpcaoSingular(Main.main, "Preencha todos os campos para prosseguir!", Notificacao.ICONE_INFORMACAO);        
    }
    
    private void limparCampos() {
        cbTipoRendimento.setSelectedItem("");
        spRendimentos.setValue(0);
        txtFonte.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarRendimento;
    private javax.swing.JButton btnExcluirRendimento;
    private javax.swing.JButton btnSalvarRendimento;
    private javax.swing.JComboBox<String> cbTipoRendimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRendimentoFixo;
    private javax.swing.JLabel lblRendimentoTotal;
    private javax.swing.JLabel lblRendimentoVariavel;
    private javax.swing.JSpinner spRendimentos;
    private javax.swing.JTable tabelaRendimento;
    private javax.swing.JTextField txtFonte;
    private javax.swing.JTextField txtPesquisaRendimento;
    // End of variables declaration//GEN-END:variables
}
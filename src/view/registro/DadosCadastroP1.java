package view.registro;

import view.registro.PainelRegistro;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Grácio Macuácua
 */
public class DadosCadastroP1 extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form ViewPerfil
     */
    public DadosCadastroP1() {
        initComponents();
        txtPNome.addKeyListener(this);
        txtApelido.addKeyListener(this);
        jdcNascimento.addKeyListener(this);
        cbGenero.addKeyListener(this);
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MMMM/yyyy"); 
        String data = sdf.format(Calendar.getInstance().getTime());  
        
        try{
            jdcNascimento.setDate(sdf.parse(data));
            jdcNascimento.setMaxSelectableDate(sdf.parse(data));
            
        }catch (ParseException ex){
            JOptionPane.showMessageDialog(null, "Erro na conversão da data!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNascimento = new javax.swing.JLabel();
        lblGenero = new javax.swing.JLabel();
        lblApelido = new javax.swing.JLabel();
        txtPNome = new javax.swing.JTextField();
        lblPNome = new javax.swing.JLabel();
        txtApelido = new javax.swing.JTextField();
        jdcNascimento = new com.toedter.calendar.JDateChooser();
        cbGenero = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        lblNascimento.setBackground(new java.awt.Color(255, 255, 255));
        lblNascimento.setForeground(new java.awt.Color(0, 102, 102));
        lblNascimento.setText("Data de Nascimento");

        lblGenero.setBackground(new java.awt.Color(255, 255, 255));
        lblGenero.setForeground(new java.awt.Color(0, 102, 102));
        lblGenero.setText("Gênero");

        lblApelido.setBackground(new java.awt.Color(255, 255, 255));
        lblApelido.setForeground(new java.awt.Color(0, 102, 102));
        lblApelido.setText("Apelido");

        txtPNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPNome.setForeground(new java.awt.Color(102, 102, 102));
        txtPNome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(12, 91, 160)));

        lblPNome.setBackground(new java.awt.Color(255, 255, 255));
        lblPNome.setForeground(new java.awt.Color(0, 102, 102));
        lblPNome.setText("Primeiro Nome");

        txtApelido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtApelido.setForeground(new java.awt.Color(102, 102, 102));
        txtApelido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(12, 91, 160)));

        jdcNascimento.setBackground(new java.awt.Color(255, 255, 255));
        jdcNascimento.setForeground(new java.awt.Color(0, 102, 102));
        jdcNascimento.setOpaque(false);

        cbGenero.setBackground(new java.awt.Color(255, 255, 255));
        cbGenero.setForeground(new java.awt.Color(0, 102, 102));
        cbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Masculino", "Feminino" }));
        cbGenero.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtApelido)
            .addComponent(jdcNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNascimento)
                    .addComponent(txtPNome, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPNome, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(cbGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblPNome, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblApelido, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblGenero, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbGenero;
    private com.toedter.calendar.JDateChooser jdcNascimento;
    private javax.swing.JLabel lblApelido;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNascimento;
    private javax.swing.JLabel lblPNome;
    private javax.swing.JTextField txtApelido;
    private javax.swing.JTextField txtPNome;
    // End of variables declaration//GEN-END:variables
    
    
    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ENTER) {
            if(txtPNome.hasFocus())
                txtApelido.requestFocus();
            else if(txtApelido.hasFocus())
                jdcNascimento.requestFocus();
            else if(jdcNascimento.hasFocus())
                cbGenero.requestFocus();
            else if(cbGenero.hasFocus()){
                PainelRegistro.btn.requestFocus();
                PainelRegistro.btn.doClick();                
            }                
        }
    }
}
